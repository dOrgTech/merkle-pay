/* Autogenerated file. Do not edit manually. */
/* tslint:disable */
/* eslint-disable */

import { Signer } from "ethers";
import { Provider, TransactionRequest } from "@ethersproject/providers";
import { Contract, ContractFactory, Overrides } from "@ethersproject/contracts";

import type { MerklePay } from "../MerklePay";

export class MerklePay__factory extends ContractFactory {
  constructor(signer?: Signer) {
    super(_abi, _bytecode, signer);
  }

  deploy(_owner: string, overrides?: Overrides): Promise<MerklePay> {
    return super.deploy(_owner, overrides || {}) as Promise<MerklePay>;
  }
  getDeployTransaction(
    _owner: string,
    overrides?: Overrides
  ): TransactionRequest {
    return super.getDeployTransaction(_owner, overrides || {});
  }
  attach(address: string): MerklePay {
    return super.attach(address) as MerklePay;
  }
  connect(signer: Signer): MerklePay__factory {
    return super.connect(signer) as MerklePay__factory;
  }
  static connect(
    address: string,
    signerOrProvider: Signer | Provider
  ): MerklePay {
    return new Contract(address, _abi, signerOrProvider) as MerklePay;
  }
}

const _abi = [
  {
    inputs: [
      {
        internalType: "address",
        name: "_owner",
        type: "address",
      },
    ],
    stateMutability: "nonpayable",
    type: "constructor",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: "address",
        name: "user",
        type: "address",
      },
      {
        indexed: true,
        internalType: "address",
        name: "token",
        type: "address",
      },
      {
        indexed: true,
        internalType: "uint256",
        name: "cycle",
        type: "uint256",
      },
      {
        indexed: false,
        internalType: "uint256",
        name: "amount",
        type: "uint256",
      },
    ],
    name: "Claimed",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: "address",
        name: "previousOwner",
        type: "address",
      },
      {
        indexed: true,
        internalType: "address",
        name: "newOwner",
        type: "address",
      },
    ],
    name: "OwnershipTransferred",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: "uint256",
        name: "cycle",
        type: "uint256",
      },
      {
        indexed: true,
        internalType: "bytes32",
        name: "root",
        type: "bytes32",
      },
      {
        indexed: true,
        internalType: "bytes32",
        name: "contentHash",
        type: "bytes32",
      },
      {
        indexed: false,
        internalType: "uint256",
        name: "blockTimestamp",
        type: "uint256",
      },
      {
        indexed: false,
        internalType: "uint256",
        name: "blockNumber",
        type: "uint256",
      },
    ],
    name: "RootPublished",
    type: "event",
  },
  {
    inputs: [
      {
        internalType: "address[]",
        name: "tokens",
        type: "address[]",
      },
      {
        internalType: "uint256[]",
        name: "cumulativeAmounts",
        type: "uint256[]",
      },
      {
        internalType: "uint256",
        name: "index",
        type: "uint256",
      },
      {
        internalType: "uint256",
        name: "cycle",
        type: "uint256",
      },
      {
        internalType: "bytes32[]",
        name: "merkleProof",
        type: "bytes32[]",
      },
      {
        internalType: "uint256[]",
        name: "amountsToClaim",
        type: "uint256[]",
      },
    ],
    name: "claim",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "",
        type: "address",
      },
      {
        internalType: "address",
        name: "",
        type: "address",
      },
    ],
    name: "claimed",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "user",
        type: "address",
      },
      {
        internalType: "address[]",
        name: "tokens",
        type: "address[]",
      },
      {
        internalType: "uint256[]",
        name: "cumulativeAmounts",
        type: "uint256[]",
      },
    ],
    name: "getClaimableFor",
    outputs: [
      {
        internalType: "address[]",
        name: "",
        type: "address[]",
      },
      {
        internalType: "uint256[]",
        name: "",
        type: "uint256[]",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "user",
        type: "address",
      },
      {
        internalType: "address[]",
        name: "tokens",
        type: "address[]",
      },
    ],
    name: "getClaimedFor",
    outputs: [
      {
        internalType: "address[]",
        name: "",
        type: "address[]",
      },
      {
        internalType: "uint256[]",
        name: "",
        type: "uint256[]",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "cycle",
        type: "uint256",
      },
    ],
    name: "getMerkleRootFor",
    outputs: [
      {
        internalType: "bytes32",
        name: "",
        type: "bytes32",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "user",
        type: "address",
      },
      {
        internalType: "address[]",
        name: "tokens",
        type: "address[]",
      },
      {
        internalType: "uint256[]",
        name: "cumulativeAmounts",
        type: "uint256[]",
      },
    ],
    name: "isClaimAvailableFor",
    outputs: [
      {
        internalType: "bool",
        name: "",
        type: "bool",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "merkleData",
    outputs: [
      {
        internalType: "uint256",
        name: "cycle",
        type: "uint256",
      },
      {
        internalType: "bytes32",
        name: "root",
        type: "bytes32",
      },
      {
        internalType: "bytes32",
        name: "contentHash",
        type: "bytes32",
      },
      {
        internalType: "uint32",
        name: "blockTimestamp",
        type: "uint32",
      },
      {
        internalType: "uint32",
        name: "blockNumber",
        type: "uint32",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "owner",
    outputs: [
      {
        internalType: "address",
        name: "",
        type: "address",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "bytes32",
        name: "root",
        type: "bytes32",
      },
      {
        internalType: "bytes32",
        name: "contentHash",
        type: "bytes32",
      },
      {
        internalType: "uint256",
        name: "cycle",
        type: "uint256",
      },
      {
        internalType: "uint32",
        name: "blockNumber",
        type: "uint32",
      },
      {
        internalType: "uint32",
        name: "blockTimestamp",
        type: "uint32",
      },
    ],
    name: "publishRoot",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [],
    name: "renounceOwnership",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "",
        type: "address",
      },
    ],
    name: "totalClaimed",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "newOwner",
        type: "address",
      },
    ],
    name: "transferOwnership",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
];

const _bytecode =
  "0x60806040523480156200001157600080fd5b50604051620019c1380380620019c1833981810160405260208110156200003757600080fd5b505160006200004562000090565b600080546001600160a01b0319166001600160a01b038316908117825560405192935091600080516020620019a1833981519152908290a350620000898162000094565b50620001ad565b3390565b6200009e62000090565b6001600160a01b0316620000b16200019e565b6001600160a01b0316146200010d576040805162461bcd60e51b815260206004820181905260248201527f4f776e61626c653a2063616c6c6572206973206e6f7420746865206f776e6572604482015290519081900360640190fd5b6001600160a01b038116620001545760405162461bcd60e51b81526004018080602001828103825260268152602001806200197b6026913960400191505060405180910390fd5b600080546040516001600160a01b0380851693921691600080516020620019a183398151915291a3600080546001600160a01b0319166001600160a01b0392909216919091179055565b6000546001600160a01b031690565b6117be80620001bd6000396000f3fe608060405234801561001057600080fd5b50600436106100b45760003560e01c8063b16eb35111610071578063b16eb351146102cb578063b366933d14610435578063cc287f3014610471578063ef5d9ae8146105a4578063f2fde38b146105ca578063ffa48e6e146105f0576100b4565b80630c9cbf0e146100b957806347eb50aa146100f9578063715018a61461013857806379ab554b146101405780638da5cb5b1461015d578063a2fcfd6814610181575b600080fd5b6100e7600480360360408110156100cf57600080fd5b506001600160a01b0381358116916020013516610737565b60408051918252519081900360200190f35b610136600480360360a081101561010f57600080fd5b5080359060208101359060408101359063ffffffff60608201358116916080013516610754565b005b610136610a67565b6100e76004803603602081101561015657600080fd5b5035610b25565b610165610b37565b604080516001600160a01b039092168252519081900360200190f35b6102326004803603604081101561019757600080fd5b6001600160a01b038235169190810190604081016020820135600160201b8111156101c157600080fd5b8201836020820111156101d357600080fd5b803590602001918460208302840111600160201b831117156101f457600080fd5b919080806020026020016040519081016040528093929190818152602001838360200280828437600092019190915250929550610b46945050505050565b604051808060200180602001838103835285818151815260200191508051906020019060200280838360005b8381101561027657818101518382015260200161025e565b50505050905001838103825284818151815260200191508051906020019060200280838360005b838110156102b557818101518382015260200161029d565b5050505090500194505050505060405180910390f35b610136600480360360c08110156102e157600080fd5b810190602081018135600160201b8111156102fb57600080fd5b82018360208201111561030d57600080fd5b803590602001918460208302840111600160201b8311171561032e57600080fd5b919390929091602081019035600160201b81111561034b57600080fd5b82018360208201111561035d57600080fd5b803590602001918460208302840111600160201b8311171561037e57600080fd5b919390928235926020810135929190606081019060400135600160201b8111156103a757600080fd5b8201836020820111156103b957600080fd5b803590602001918460208302840111600160201b831117156103da57600080fd5b919390929091602081019035600160201b8111156103f757600080fd5b82018360208201111561040957600080fd5b803590602001918460208302840111600160201b8311171561042a57600080fd5b509092509050610c17565b61043d610ce6565b6040805195865260208601949094528484019290925263ffffffff9081166060850152166080830152519081900360a00190f35b6102326004803603606081101561048757600080fd5b6001600160a01b038235169190810190604081016020820135600160201b8111156104b157600080fd5b8201836020820111156104c357600080fd5b803590602001918460208302840111600160201b831117156104e457600080fd5b9190808060200260200160405190810160405280939291908181526020018383602002808284376000920191909152509295949360208101935035915050600160201b81111561053357600080fd5b82018360208201111561054557600080fd5b803590602001918460208302840111600160201b8311171561056657600080fd5b919080806020026020016040519081016040528093929190818152602001838360200280828437600092019190915250929550610d06945050505050565b6100e7600480360360208110156105ba57600080fd5b50356001600160a01b0316610dc8565b610136600480360360208110156105e057600080fd5b50356001600160a01b0316610dda565b6107236004803603606081101561060657600080fd5b6001600160a01b038235169190810190604081016020820135600160201b81111561063057600080fd5b82018360208201111561064257600080fd5b803590602001918460208302840111600160201b8311171561066357600080fd5b9190808060200260200160405190810160405280939291908181526020018383602002808284376000920191909152509295949360208101935035915050600160201b8111156106b257600080fd5b8201836020820111156106c457600080fd5b803590602001918460208302840111600160201b831117156106e557600080fd5b919080806020026020016040519081016040528093929190818152602001838360200280828437600092019190915250929550610eee945050505050565b604080519115158252519081900360200190f35b600560209081526000928352604080842090915290825290205481565b61075c610f86565b6001600160a01b031661076d610b37565b6001600160a01b0316146107c8576040805162461bcd60e51b815260206004820181905260248201527f4f776e61626c653a2063616c6c6572206973206e6f7420746865206f776e6572604482015290519081900360640190fd5b6001548310610810576040805162461bcd60e51b815260206004820152600f60248201526e496e636f7272656374206379636c6560881b604482015290519081900360640190fd5b60045463ffffffff80831691161061086f576040805162461bcd60e51b815260206004820152601e60248201527f626c6f636b54696d657374616d70206f6c646572207468616e206c6173740000604482015290519081900360640190fd5b60045463ffffffff8083169116106108ce576040805162461bcd60e51b815260206004820152601e60248201527f626c6f636b54696d657374616d70206f6c646572207468616e206c6173740000604482015290519081900360640190fd5b60045463ffffffff808416600160201b9092041610610934576040805162461bcd60e51b815260206004820152601b60248201527f626c6f636b4e756d626572206f6c646572207468616e206c6173740000000000604482015290519081900360640190fd5b601e43038263ffffffff1610610989576040805162461bcd60e51b8152602060048201526015602482015274213637b1b590373ab6b132b9103a37b79039b7b7b760591b604482015290519081900360640190fd5b61018642038163ffffffff16106109dc576040805162461bcd60e51b81526020600482015260126024820152712a34b6b2b9ba30b6b8103a37b79039b7b7b760711b604482015290519081900360640190fd5b6001839055600285905560038490556004805467ffffffff000000001916600160201b63ffffffff8581169182029290921763ffffffff191691841691821790925560408051918252602082019290925281518692889287927f5286d3dfac7998a23b4553cb3d8f768ff449e8b62c5594f627de34f6a0608071929181900390910190a45050505050565b610a6f610f86565b6001600160a01b0316610a80610b37565b6001600160a01b031614610adb576040805162461bcd60e51b815260206004820181905260248201527f4f776e61626c653a2063616c6c6572206973206e6f7420746865206f776e6572604482015290519081900360640190fd5b600080546040516001600160a01b03909116907f8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e0908390a3600080546001600160a01b0319169055565b60009081526007602052604090205490565b6000546001600160a01b031690565b6060806000835167ffffffffffffffff81118015610b6357600080fd5b50604051908082528060200260200182016040528015610b8d578160200160208202803683370190505b50905060005b8451811015610c0d576001600160a01b03861660009081526005602052604081208651909190879084908110610bc557fe5b60200260200101516001600160a01b03166001600160a01b0316815260200190815260200160002054828281518110610bfa57fe5b6020908102919091010152600101610b93565b5092949293505050565b610c278a8a8a8a8a8a8a8a610f8a565b6000805b8a811015610c9157610c7f33888e8e85818110610c4457fe5b905060200201356001600160a01b03168d8d86818110610c6057fe5b90506020020135888887818110610c7357fe5b905060200201356110c2565b15610c8957600191505b600101610c2b565b5080610cd9576040805162461bcd60e51b81526020600482015260126024820152714e6f20746f6b656e7320746f20636c61696d60701b604482015290519081900360640190fd5b5050505050505050505050565b60015460025460035460045463ffffffff80821691600160201b90041685565b6060806000845167ffffffffffffffff81118015610d2357600080fd5b50604051908082528060200260200182016040528015610d4d578160200160208202803683370190505b50905060005b8551811015610dbd57610d9e610d7c88888481518110610d6f57fe5b60200260200101516111ff565b868381518110610d8857fe5b602002602001015161122a90919063ffffffff16565b828281518110610daa57fe5b6020908102919091010152600101610d53565b509395939450505050565b60066020526000908152604090205481565b610de2610f86565b6001600160a01b0316610df3610b37565b6001600160a01b031614610e4e576040805162461bcd60e51b815260206004820181905260248201527f4f776e61626c653a2063616c6c6572206973206e6f7420746865206f776e6572604482015290519081900360640190fd5b6001600160a01b038116610e935760405162461bcd60e51b81526004018080602001828103825260268152602001806117136026913960400191505060405180910390fd5b600080546040516001600160a01b03808516939216917f8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e091a3600080546001600160a01b0319166001600160a01b0392909216919091179055565b6000805b8351811015610f79576001600160a01b03851660009081526005602052604081208551610f5d91908390889086908110610f2857fe5b60200260200101516001600160a01b03166001600160a01b0316815260200190815260200160002054858481518110610d8857fe5b90508015610f7057600192505050610f7f565b50600101610ef2565b50600090505b9392505050565b3390565b60008433858b8b8b8b60405160200180888152602001876001600160a01b0316815260200186815260200180602001806020018381038352878782818152602001925060200280828437600083820152601f01601f19169091018481038352858152602090810191508690860280828437600081840152601f19601f8201169050808301925050509950505050505050505050604051602081830303815290604052805190602001209050611076838380806020026020016040519081016040528093929190818152602001838360200280828437600092019190915250506002549150849050611287565b6110b7576040805162461bcd60e51b815260206004820152600d60248201526c24b73b30b634b210383937b7b360991b604482015290519081900360640190fd5b505050505050505050565b6000806110cf87866111ff565b905060006110dd858361122a565b905080841115611126576040805162461bcd60e51b815260206004820152600f60248201526e45786365737369766520636c61696d60881b604482015290519081900360640190fd5b80611136576000925050506111f6565b6000611142838661129d565b905061114f8988836112f7565b8581111561118e5760405162461bcd60e51b81526004018080602001828103825260348152602001806116df6034913960400191505060405180910390fd5b6111a26001600160a01b0388168a87611323565b87876001600160a01b03168a6001600160a01b03167f2f6639d24651730c7bf57c95ddbf96d66d11477e4ec626876f92c22e5f365e68886040518082815260200191505060405180910390a4600193505050505b95945050505050565b6001600160a01b03918216600090815260056020908152604080832093909416825291909152205490565b600082821115611281576040805162461bcd60e51b815260206004820152601e60248201527f536166654d6174683a207375627472616374696f6e206f766572666c6f770000604482015290519081900360640190fd5b50900390565b600082611294858461137a565b14949350505050565b600082820183811015610f7f576040805162461bcd60e51b815260206004820152601b60248201527f536166654d6174683a206164646974696f6e206f766572666c6f770000000000604482015290519081900360640190fd5b6001600160a01b0392831660009081526005602090815260408083209490951682529290925291902055565b604080516001600160a01b038416602482015260448082018490528251808303909101815260649091019091526020810180516001600160e01b031663a9059cbb60e01b1790526113759084906113d7565b505050565b600081815b84518110156113cf57600085828151811061139657fe5b60200260200101519050828110156113b9576113b28184611488565b92506113c6565b6113c38382611488565b92505b5060010161137f565b509392505050565b600061142c826040518060400160405280602081526020017f5361666545524332303a206c6f772d6c6576656c2063616c6c206661696c6564815250856001600160a01b03166114c29092919063ffffffff16565b8051909150156113755780806020019051602081101561144b57600080fd5b50516113755760405162461bcd60e51b815260040180806020018281038252602a81526020018061175f602a913960400191505060405180910390fd5b60408051600160f81b6020808301919091526021820194909452604180820193909352815180820390930183526061019052805191012090565b60606114d184846000856114d9565b949350505050565b60608247101561151a5760405162461bcd60e51b81526004018080602001828103825260268152602001806117396026913960400191505060405180910390fd5b61152385611634565b611574576040805162461bcd60e51b815260206004820152601d60248201527f416464726573733a2063616c6c20746f206e6f6e2d636f6e7472616374000000604482015290519081900360640190fd5b600080866001600160a01b031685876040518082805190602001908083835b602083106115b25780518252601f199092019160209182019101611593565b6001836020036101000a03801982511681845116808217855250505050505090500191505060006040518083038185875af1925050503d8060008114611614576040519150601f19603f3d011682016040523d82523d6000602084013e611619565b606091505b509150915061162982828661163a565b979650505050505050565b3b151590565b60608315611649575081610f7f565b8251156116595782518084602001fd5b8160405162461bcd60e51b81526004018080602001828103825283818151815260200191508051906020019080838360005b838110156116a357818101518382015260200161168b565b50505050905090810190601f1680156116d05780820380516001836020036101000a031916815260200191505b509250505060405180910390fdfe496e76617269616e743a2063756d756c617469766520636c61696d6564203e2063756d756c617469766520636c61696d61626c654f776e61626c653a206e6577206f776e657220697320746865207a65726f2061646472657373416464726573733a20696e73756666696369656e742062616c616e636520666f722063616c6c5361666545524332303a204552433230206f7065726174696f6e20646964206e6f742073756363656564a2646970667358221220f7af7c5fea7f81a7cc6f592ddcee138ec96011abf271cf8e186be308e8d3b65b64736f6c634300070600334f776e61626c653a206e6577206f776e657220697320746865207a65726f20616464726573738be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e0";
